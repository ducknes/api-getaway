// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "авторизует пользователя на сайт и возвращает токен",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Вход",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Авторизация прошла успешно",
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "разлогинивает пользователя с сайта",
                "tags": [
                    "Авторизация"
                ],
                "summary": "Выход",
                "responses": {
                    "200": {
                        "description": "Выход прошел успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Получает определенное через limit количество продуктов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Продукты"
                ],
                "summary": "Получение продуктов",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество получаемых продуктов",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ссылка на следующие продукты",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получение прошло успешно",
                        "schema": {
                            "$ref": "#/definitions/storageservice.Products"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Обновляет продукты",
                "tags": [
                    "Продукты"
                ],
                "summary": "Обновление продуктов",
                "parameters": [
                    {
                        "description": "Обновляемые продукты",
                        "name": "products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storageservice.Product"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сохранение прошло успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Сохраняет продукты",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Продукты"
                ],
                "summary": "Сохранение продуктов",
                "parameters": [
                    {
                        "description": "Сохраняемые продукты",
                        "name": "products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storageservice.Product"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сохранение прошло успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Удаляет продукты из базы данных по переданным идентификаторам",
                "tags": [
                    "Продукты"
                ],
                "summary": "Удаление продуктов",
                "parameters": [
                    {
                        "description": "Список идентификаторов продуктов для удаления",
                        "name": "productIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Удаление прошло успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/products/one": {
            "get": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Получает продукт по его идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Продукты"
                ],
                "summary": "Получение продукта",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор продукта",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получение прошло успешно",
                        "schema": {
                            "$ref": "#/definitions/storageservice.Product"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "обновляет токен авторизации по токену обновления",
                "tags": [
                    "Авторизация"
                ],
                "summary": "Обновление токена",
                "responses": {
                    "200": {
                        "description": "Обновление токена прошло успешно",
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/sign-up": {
            "post": {
                "description": "регистрирует пользователя в сервисе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Регистрация",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "registration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Регистрация прошла успешно",
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Получает пользователя по его идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Получение пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получение прошло успешно",
                        "schema": {
                            "$ref": "#/definitions/userservice.User"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Обновляет пользователя",
                "tags": [
                    "Пользователи"
                ],
                "summary": "Обновление пользователя",
                "parameters": [
                    {
                        "description": "Обновляемый пользователь",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновление прошло успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Сохраняет нового пользователя",
                "tags": [
                    "Пользователи"
                ],
                "summary": "Сохранение пользователя",
                "parameters": [
                    {
                        "description": "Сохраняемый пользователь",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сохранение прошло успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Удаляет пользователя по его идентификатору",
                "tags": [
                    "Пользователи"
                ],
                "summary": "Удаление пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Удаление прошло успешно"
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/user/many": {
            "get": {
                "security": [
                    {
                        "LogisticAuth": []
                    }
                ],
                "description": "Получает определенное в limit количество пользователей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Получение пользователей",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество пользователей",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ссылка на следующих пользователей",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получение прошло успешно",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/userservice.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "401": {
                        "description": "Неавторизован"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        }
    },
    "definitions": {
        "authservice.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Токен пользователя",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "Токен для обновления",
                    "type": "string"
                }
            }
        },
        "authservice.LoginUser": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Пароль",
                    "type": "string"
                },
                "username": {
                    "description": "Логин",
                    "type": "string"
                }
            }
        },
        "storageservice.Product": {
            "type": "object",
            "properties": {
                "approver": {
                    "description": "Согласующий",
                    "type": "string"
                },
                "brandName": {
                    "description": "Бренд кроссовок",
                    "type": "string"
                },
                "description": {
                    "description": "Описание модели кроссовка",
                    "type": "string"
                },
                "factoryName": {
                    "description": "Завод изготовитель",
                    "type": "string"
                },
                "id": {
                    "description": "Id продукта",
                    "type": "string"
                },
                "images": {
                    "description": "Картинки",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "items": {
                    "description": "Варианты кроссовок",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storageservice.ProductItem"
                    }
                },
                "materials": {
                    "description": "Материалы изготовления",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Название модели кроссовка",
                    "type": "string"
                },
                "price": {
                    "description": "Цена продукта",
                    "type": "number"
                },
                "status": {
                    "description": "Статус продукта",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storageservice.ProductStatus"
                        }
                    ]
                }
            }
        },
        "storageservice.ProductItem": {
            "type": "object",
            "properties": {
                "color": {
                    "description": "Цвет",
                    "type": "string"
                },
                "size": {
                    "description": "Размер",
                    "type": "integer"
                },
                "stockCount": {
                    "description": "Кол-во на складе",
                    "type": "integer"
                },
                "weight": {
                    "description": "Вес",
                    "type": "number"
                }
            }
        },
        "storageservice.ProductStatus": {
            "type": "string",
            "enum": [
                "unknown",
                "waiting_approve",
                "approved"
            ],
            "x-enum-varnames": [
                "Unknown",
                "WaitingApprove",
                "Approved"
            ]
        },
        "storageservice.Products": {
            "type": "object",
            "properties": {
                "cursor": {
                    "description": "Текущий курсор",
                    "type": "string"
                },
                "fromCache": {
                    "description": "Из кеша",
                    "type": "boolean"
                },
                "items": {
                    "description": "Список продуктов",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storageservice.Product"
                    }
                },
                "limit": {
                    "description": "Кол-во элементов",
                    "type": "integer"
                },
                "nextCursor": {
                    "description": "Курсор для запроса след страницы",
                    "type": "string"
                }
            }
        },
        "userservice.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Undefined",
                "UserRole",
                "AdminRole"
            ]
        },
        "userservice.User": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id пользователя",
                    "type": "string"
                },
                "lastname": {
                    "description": "Отчетство",
                    "type": "string"
                },
                "name": {
                    "description": "Имя",
                    "type": "string"
                },
                "registeredObjects": {
                    "description": "Количестов подтвержленных продуктов",
                    "type": "integer"
                },
                "role": {
                    "description": "Роль",
                    "allOf": [
                        {
                            "$ref": "#/definitions/userservice.Role"
                        }
                    ]
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string"
                },
                "username": {
                    "description": "Логин",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "LogisticAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "api-gateway",
	Description:      "Прослойка для взаимодействия с логистическим сервисом",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
